# 使用LLM根据基于问题的数据（XX_UI_Q.txt）进行编码，设计相应的提示语的简化版本。

# 生成开放编码

{横向数据-基于1个调研问题}

---
1. 熟悉数据

你是一位专业的定性研究员，请熟悉上面提供的游戏《我的世界》玩家访谈记录。这是一次一对一的访谈，记录中应只有两位发言者（访谈员和被访者），共28位被访者。目前仅给列一个访谈题目的数据。访谈记录格式为：

“”“
{访谈问题}

{被访者1的回复}

{被访者2的回复}

// ... 下一个被访者回复
”“”
请报告该数据中有几个被访者的回答。

2. 开放编码

我希望你为上面的访谈记录进行定性编码。请以表格形式展示结果。
第一列是“编码名称”(Code Name)，每个编码名称应少于4个词。
第二列是“编码定义”(Code Definition)，每个定义应少于15个词。
第三列是该编码下识别出的“引文总数”(Total number of excerpts)。
第四列是“引文详情”(Excerpts)，展示该编码下的所有引文原文，不要缩短，保留原始引文。每个引文前标记出被访者ID。
请不要对访谈员提出的问题进行编码。你应该对被访者的回答进行编码，编码对象可以是句子或句子的一部分。
每个编码至少应包含5个以上的引文，少于5个的引文考虑与其他意义相同的编码合并。
对于每次访谈，你应该识别出至少1个编码。

3. 主题提取

我现在希望你作为主题分析的一部分来搜索主题。根据你上一个步骤识别的编码名称和编码定义。你应该根据共同性或总体概念来判断哪些编码可以合并在一起。
请以表格形式展示结果。
第一列是“主题名称”(Name of the theme)。
第二列是所有归入该主题的“编码列表”(All codes that fit into the theme)。
第三列是该主题的“简要总结”(Brief summary of the theme)。


# 生成开放编码JSON

请将 该访谈问题 的分析结果，严格按照以下JSON结构组织起来。整个输出应该是一个JSON列表，列表中的每个对象代表一个问题的分析结果，只保留中文：（有时候，LLM会拒绝此工作，可替换为如下内容）

你做的非常好，我后续会结合你的分析结果进行进一步的审核和精炼，请帮我把这份编码结果输出为JSON格式，整个输出应该是一个JSON列表，列表中的每个对象代表一个问题的分析结果，只保留中文

[
  { // 第一个问题的分析结果
    "question_text": "这里是第一个问题的完整文本",
    "initial_codes": [ // 该问题下的所有初始编码
      {
        "respondent_id": "被访者ID",
        "original_answer_segment": "被访者对该问题的完整回答",
        "code_name": [
            "初始编码1的名称1",
            "初始编码1的名称2",
            //更多编码名称
        ],
        "supporting_quote": [
            "支持初始编码1的引文",
            "支持初始编码2的引文",
            //更多引文
        ],
        "pairs": [
          "1-1", "2-2"
          // ..由连接符相连的两个数字表示编码与引文之间的对应关系。
          // 连接符前面的数字表示code_name中的第几个编码，连接符后面的数据表示supporting_quote中第几个引文
          // 如果编码与引文数量不对应，要以编码数量优先。例如：
          // "code_name": [ "生存挑战", "合作与社交"]
          // "supporting_quote": [ "生存模式吧，以前觉得和朋友一起打怪的时候很刺激。"]
          // 那么 "pairs": [ "1-1", "2-1"]
        ]
      },
      {
        "respondent_id": "被访者ID",
        "original_answer_segment": "被访者对该问题的完整回答",
        "code_name": [
            "初始编码1的名称1",
            "初始编码1的名称2",
            //更多编码名称
        ],
        "supporting_quote": [
            "支持初始编码1的引文",
            "支持初始编码2的引文",
            //更多引文
        ],
        "pairs": [
          "1-1", "2-2"
          // ..由连接符相连的两个数字表示编码与引文之间的对应关系。
          // 连接符前面的数字表示code_name中的第几个编码，连接符后面的数据表示supporting_quote中第几个引文
          // 如果编码与引文数量不对应，要以编码数量优先。例如：
          // "code_name": [ "自由创造", "资源获取", "成就感"]
          // "supporting_quote": [ "能自己创造，然后就在生存模式里能自己获取资源啥的","有一个地方能发挥我的创造力，有成就感"]
          // 那么 "pairs": [ "1-2", "2-1", "3-2"] <--这个对应关系要能够真实反映编码与引文意义上的一致性。
        ]
      },
      // ... 更多该被访者回答的其他初始编码
      // ... 更多其他被访者对该问题的初始编码
    ],
    "codes": [ // 编码汇总
        {
          "code_name": "识别出的第一个初始编码",
          "code_definition": "编码定义",
        },
        {
          "code_name": "识别出的第二个初始编码",
          "code_definition": "编码定义",
        },
        // ... 更多初始编码
    ],
    "themes": [ // 从上述初始编码中提炼出的主题编码
      {
        "theme_name": "主题编码A的名称",
        "theme_definition": "对主题编码A的简要定义",
        "included_initial_codes": ["初始编码1的名称", "初始编码X的名称", ...] // 构成此主题的初始编码名称列表
      },
      {
        "theme_name": "主题编码B的名称",
        "theme_definition": "对主题编码B的简要定义",
        "included_initial_codes": ["初始编码2的名称", "初始编码Y的名称", ...]
      }
      // ... 更多为该问题提炼的主题编码
    ]
  },
  { // 第二个问题的分析结果
    "question_text": "这里是第二个问题的完整文本",
    "initial_codes": [ /* ... */ ],
    "themes": [ /* ... */ ]
  }
  // ... 批次内其他问题的分析结果
]

1. 请尽可能一次性生成将完整JSON内容，包含所有{数量}位被访者的回答，不能省略。
2. 如果JSON内容过长:
2.1 可分2-3段输出。每段请用“【第1段】”、“【第2段】”等标记开头。每次只输出JSON正文内容的一部分。
2.2 当输出多段JSON时，上一段的结尾处保持开放的未写完状态，下一段输出的代码要紧接着上一段结尾的内容继续输出，直到全部输出完毕。
2.3 不要省略，不要解释。


## 对于高级LLM模型在第一次编码后可尝试直接喂给新的数据

你做的非常出色，请你对下面的问题数据进行同样的开放编码、主题分析，并生成JSON文件，我会对其进一步审核与精练，使用此份数据作为研究辅助性资料

横线后面为访谈数据
---

